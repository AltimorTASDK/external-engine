name: Build

on: [push, pull_request]

jobs:
  debian:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        with:
          path: |
            stockfish/vendor/sde-external-9.0.0-2021-11-07-lin.tar.xz
            stockfish/vendor/x86_64-linux-musl-native.tgz
            stockfish/vendor/sf_15.tar.gz
            stockfish/vendor/nn-6877cd24400e.nnue
          key: ${{ runner.os }}-stockfish-${{ hashFiles('stockfish/vendor/SHA256SUM') }}
      - run: ./deps.sh
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha
          load: true
          tags: niklasf/external-engine:latest
      - run: docker cp "$(docker create niklasf/external-engine):/stockfish_15-1_amd64.deb" .
      - run: docker cp "$(docker create niklasf/external-engine):/remote-uci_1-1_amd64.deb" .
      - uses: actions/upload-artifact@v3
        with:
          name: external-engine
          path: |
            stockfish_15-1_amd64.deb
            remote-uci_1-1_amd64.deb
  windows:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-rust mingw-w64-x86_64-make tar
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/checkout@v3
        with:
          repository: lichess-org/intel-sde
          ssh-key: ${{ secrets.ID_RSA_INTEL_SDE }}
          ref: main
          path: intel-sde
        id: sde
        continue-on-error: true
        if: startsWith(github.ref, 'refs/tags/v')
      - run: |
          tar xf intel-sde/sde-external-9.0.0-2021-11-07-win.tar.xz && echo SDE_PATH=$(cygpath -u $GITHUB_WORKSPACE)/sde-external-9.0.0-2021-11-07-win/sde.exe | tee $GITHUB_ENV
          echo PGO=profile- | tee $GITHUB_ENV
        if: steps.sde.outcome == 'success'
  release:
    runs-on: ubuntu-latest
    needs:
      - debian
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - run: sudo apt-get install -y reprepro
      - run: reprepro --basedir gh-pages/debian includedeb bullseye external-engine/stockfish_15-1_amd64.deb
      - run: reprepro --basedir gh-pages/debian includedeb bullseye external-engine/remote-uci_1-1_amd64.deb
      - run: |
          cd gh-pages &&
          git init --initial-branch gh-pages &&
          git config user.name "${GITHUB_ACTOR}" &&
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com" &&
          git add . &&
          git commit -m 'Display to GitHub Pages' &&
          git push --force "https://${GH_PAT}@github.com/${GITHUB_REPOSITORY}.git" gh-pages
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
